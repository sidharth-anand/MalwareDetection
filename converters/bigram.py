import cv2
import numpy as np

from core.config import DatasetConfig
from core.utils import DatasetUtils

from datasets.msbig import MSBig

class BiGram(MSBig):
    OUTPUT_CHANNELS = 3

    def __init__(self, path: str, config: DatasetConfig, utils: DatasetUtils) -> None:
        super().__init__(path, MSBig.Type.BYTES, config, utils)

    def _convert_to_image(self, file: str) -> np.array:
        file_data = super()._get_byte_data(file)
        file_data = list(np.array(file_data).flat)

        image = np.zeros((256, 256), dtype=np.float32)
        for i in range(len(file_data) - 1):
            image[file_data[i]][file_data[i + 1]] += 1

        image[0][0] = 0
        max_count = np.max(image)
        image = image / max_count * 255

        image = cv2.dct(image)
        image = np.uint8(image) * 255
        return np.stack([image, image, image], axis=2)
