import os

import cv2
import numpy as np

from core.config import DatasetConfig
from core.utils import DatasetUtils

from datasets.msbig import MSBig

class CBOW(MSBig):
    OUTPUT_CHANNELS = 3
    CONVERT_OFFLINE =  True

    def __init__(self, path: str, config: DatasetConfig, utils: DatasetUtils) -> None:
        super().__init__(path, MSBig.Type.ASM, config, utils)

    def _convert_to_image(self, file: str) -> np.array:
        # TODO: Add an optimized version of the offline implementation
        pass

    def _load_converted_image(self, file: str) -> np.array:
        file = file.decode()
        file = os.path.join(os.path.dirname(file), os.path.basename(file) + '.png')

        if not os.path.exists(file):
            return np.zeros((256, 256, 3), dtype=np.uint8)

        image = cv2.imread(file)
        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        image = np.array(image)

        return image