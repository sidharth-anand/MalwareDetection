import math

import numpy as np

from core.config import DatasetConfig
from core.utils import DatasetUtils

from datasets.msbig import MSBig

class DTMIC(MSBig):
    OUTPUT_CHANNELS = 3

    def __init__(self, path: str, config: DatasetConfig, utils: DatasetUtils) -> None:
        super().__init__(path, MSBig.Type.BYTES, config, utils)

    def _convert_to_image(self, file: str) -> np.array:
        f = open(file, 'r')

        file_data = []

        for line in f.readlines():
            data = line.split(' ')[1:]
            file_data += [0 if (x == '??' or x == '??\n') else int(x, 16) for x in data]

        width = 47 * 15
        height = math.ceil(len(file_data) / width)

        image = np.array(file_data + [0] * (height * width - len(file_data)), dtype=np.uint8).reshape((height, width))
        return np.stack([image, image, image], axis=2)
        