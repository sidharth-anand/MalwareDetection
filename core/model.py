import typing

import tensorflow as tf

class Model(tf.keras.Model):
    def __init__(self) -> None:
        super().__init__()

    def get_callbacks(self, log_path: str, checkpoint_path: str) -> typing.List[tf.keras.callbacks.Callback]:
        return [
            tf.keras.callbacks.TensorBoard(log_dir=log_path, histogram_freq=1, write_graph=True),
            tf.keras.callbacks.ModelCheckpoint(filepath=checkpoint_path, save_weights_only=False, save_best_only=False, verbose=1)
        ]

    def get_optimizer(self) -> tf.keras.optimizers.Optimizer:
        return tf.keras.optimizers.Adam()

    def get_loss(self) -> tf.keras.losses.Loss:
        return tf.keras.losses.CategoricalCrossentropy()

    def get_metrics(self) -> typing.List[tf.keras.metrics.Metric]:
        return [
            tf.keras.metrics.CategoricalAccuracy(),
            tf.keras.metrics.CategoricalCrossentropy(),
        ]
