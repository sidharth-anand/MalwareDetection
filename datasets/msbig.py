import abc
import os
import typing

from enum import Enum

from core.dataset import Dataset
from core.config import DatasetConfig
from core.utils import DatasetUtils

import pandas as pd

class MSBig(Dataset, metaclass=abc.ABCMeta):
    class Type(Enum):
        BYTES = 'bytes'
        ASM = 'asm'

    def __init__(self, path: str, type: Type, config: DatasetConfig, utils: DatasetUtils) -> None:
        self.type = type

        super().__init__(path, config, utils)

    def _get_dataset(self) -> Dataset.DatasetType:
        data_path = os.path.join(self.path, 'train')
        labels_path = os.path.join(self.path, 'trainLabels.csv')

        labels = pd.read_csv(labels_path)

        return list(zip([os.path.join(data_path, file + f'.{self.type.value}') for file in labels['id'].to_list()], [label - 1 for label in labels['class'].to_list()]))

    def _get_classes(self) -> typing.Dict[int, str]:
        return {
            0: 'ramnit',
            1: 'lollipop',
            2: 'kelihos_ver3',
            3: 'vundo',
            4: 'simda',
            5: 'tracur',
            6: 'kelihos_ver1',
            7: 'obfuscator.acy',
            8: 'gatak',
        }