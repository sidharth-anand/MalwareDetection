import tensorflow as tf
import tensorflow_hub as hub

from core.model import Model

class ConvNext(Model):
    INPUT_SIZE = (384, 384)
    INPUT_CHANNELS = 3 

    def __init__(self, num_classes: int) -> None:
        super().__init__()

        self.base_model = hub.KerasLayer('https://tfhub.dev/sayakpaul/convnext_xlarge_21k_1k_384_fe/1')
        self.base_model.trainable = False

        self.pool = tf.keras.GlobalAveragePooling2D()
        self.dense_output = tf.keras.layers.Dense(num_classes, kernel_initializer=tf.keras.initializers.GlorotUniform(), activation=tf.keras.activations.sigmoid)

    def call(self, inputs: tf.Tensor) -> tf.Tensor:
        x = self.base_model(inputs)
        x = self.pool(x)
        x = self.dense_output(x)

        return x