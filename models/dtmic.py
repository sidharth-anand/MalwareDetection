import tensorflow as tf

from core.model import Model

class DTMIC(Model):
    INPUT_SIZE = (224, 224)
    INPUT_CHANNELS = 3

    def __init__(self, num_classes: int) -> None:
        super().__init__()

        self.base_model = tf.keras.applications.VGG16(weights='imagenet', input_shape=(DTMIC.INPUT_SIZE[0], DTMIC.INPUT_SIZE[1], DTMIC.INPUT_CHANNELS), include_top=False)
        self.base_model.trainable = False

        self.classification_head = tf.keras.Sequential([
            tf.keras.layers.Flatten(),
            tf.keras.layers.Dense(128, activation='relu'),
            tf.keras.layers.Dense(num_classes, activation='softmax')
        ])

    def call(self, inputs: tf.Tensor) -> tf.Tensor:
        x = self.base_model(inputs, training=False)
        x = self.classification_head(x)

        return x