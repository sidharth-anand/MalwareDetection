import tensorflow as tf

from core.model import Model

class MobileNet(Model):
    INPUT_SIZE = (256, 256)
    INPUT_CHANNELS = 3

    def __init__(self, num_classes: int) -> None:
        super().__init__()

        self.base_model = tf.keras.applications.MobileNetV2(weights='imagenet', input_shape=(MobileNet.INPUT_SIZE[0], MobileNet.INPUT_SIZE[1], MobileNet.INPUT_CHANNELS), include_top=False)
        self.base_model.trainable = False

        self.model = tf.keras.Sequential(name='clf')
        
        self.model.add(tf.keras.layers.Conv2D(16, 3, strides=1, padding="valid",name='clf_conv'))
        self.model.add(tf.keras.layers.BatchNormalization(name='clf_BN'))
        self.model.add(tf.keras.layers.Activation("relu",name='clf_relu0'))
        self.model.add(tf.keras.layers.Dropout(0.25,name='clf_drp'))
        self.model.add(tf.keras.layers.Flatten(name='clf_faltten'))
        self.model.add(tf.keras.layers.Dense(num_classes, name='clf_linear1'))
        self.model.add(tf.keras.layers.Activation("softmax", name='clf_out'))

    def call(self, inputs: tf.Tensor) -> tf.Tensor:
        x = tf.keras.applications.mobilenet_v2.preprocess_input(inputs)
        
        x = self.base_model(x)
        x = self.model(x)

        return x