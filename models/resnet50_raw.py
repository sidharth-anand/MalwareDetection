import tensorflow as tf

from core.model import Model

class ResNet50Raw(Model):
    INPUT_SIZE = (224, 224)
    INPUT_CHANNELS = 3

    def __init__(self, num_classes: int) -> None:
        super().__init__()

        self.base_model = tf.keras.applications.ResNet50V2(weights=None, input_shape=(ResNet50Raw.INPUT_SIZE[0], ResNet50Raw.INPUT_SIZE[1], ResNet50Raw.INPUT_CHANNELS), include_top=False)
        self.pool = tf.keras.layers.GlobalAveragePooling2D()
        self.dense_output = tf.keras.layers.Dense(num_classes, kernel_initializer=tf.keras.initializers.GlorotUniform(), activation=tf.keras.activations.sigmoid)

    def call(self, inputs: tf.Tensor) -> tf.Tensor:
        x =  tf.keras.applications.resnet_v2.preprocess_input(inputs)

        x = self.base_model(x)
        x = self.pool(x)
        x = self.dense_output(x)

        return x