import tensorflow as tf

from core.model import Model

class VGG19Raw(Model):
    INPUT_SIZE = (224, 224)
    INPUT_CHANNELS = 3

    def __init__(self, num_classes: int) -> None:
        super().__init__()

        self.base_model = tf.keras.applications.VGG19(weights=None, input_shape=(VGG19Raw.INPUT_SIZE[0], VGG19Raw.INPUT_SIZE[1], VGG19Raw.INPUT_CHANNELS), include_top=False)

        self.pool = tf.keras.layers.GlobalAveragePooling2D()
        self.dense_output = tf.keras.layers.Dense(num_classes, kernel_initializer=tf.keras.initializers.GlorotUniform(), activation=tf.keras.activations.sigmoid)

    def call(self, input: tf.Tensor) -> tf.Tensor:
        x = self.base_model(input)
        x = self.pool(x)
        x = self.dense_output(x)

        return x
