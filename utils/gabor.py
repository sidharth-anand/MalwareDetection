import cv2
import numpy as np

def _build_filters():
    filters = []
    kernel_size = 31

    for theta in np.arange(0, np.pi, np.pi / 32):
        params = {
            'sigma':1.0,
            'ksize':(kernel_size, kernel_size),
            'theta':theta,
            'lambd':15.0,
            'gamma':0.02,
            'psi':0,
            'ktype':cv2.CV_32F
        }

        kern = cv2.getGaborKernel(**params)
        kern /= 1.5 * kern.sum()

        filters.append((kern, params))
    
    return filters

def gabor_transform(img: np.array) -> np.array: 
    filters = _build_filters()
    accumulator = np.zeros_like(img)

    for kern, _ in filters:
        filtered_image = cv2.filter2D(img, cv2.CV_8UC3, kern)
        np.maximum(accumulator, filtered_image, accumulator)
    
    return accumulator